project(ptracer
        VERSION 0.1.0
        DESCRIPTION "Library and utility tool that can inspect all the system calls performed by a process together with their stack traces"
        HOMEPAGE_URL "https://github.com/MaDeG/ptracer"
        LANGUAGES CXX)

include(FetchContent)

set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_BUILD_TYPE Debug)

### Require out-of-source builds
file(TO_CMAKE_PATH "${PROJECT_BINARY_DIR}/CMakeLists.txt" LOC_PATH)
if(EXISTS "${LOC_PATH}")
    message(FATAL_ERROR "You cannot build in a source directory (or any directory with a CMakeLists.txt file). Please make a build subdirectory. Feel free to remove CMakeCache.txt and CMakeFiles.")
endif()

message("Compiler: ${CMAKE_CXX_COMPILER}")

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_BINARY_DIR})
set(CMAKE_PREFIX_PATH ${CMAKE_BINARY_DIR} ${CMAKE_PREFIX_PATH})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

include_directories(${PROJECT_SOURCE_DIR}/src/aarch64 ${PROJECT_SOURCE_DIR}/src)

FetchContent_Declare(libunwindstack-ndk
                     GIT_REPOSITORY https://github.com/MaDeG/libunwindstack-ndk
                     GIT_TAG integration
                     GIT_SUBMODULES ""
                     SOURCE_SUBDIR cmake)
FetchContent_MakeAvailable(libunwindstack-ndk)
FetchContent_GetProperties(libunwindstack-ndk)

set(Boost_DEBUG TRUE)
set(Boost_NO_SYSTEM_PATHS ON)
set(Boost_USE_STATIC_LIBS ON)
find_package(Boost 1.40 COMPONENTS program_options log REQUIRED)
#find_package(Threads REQUIRED)

file(GLOB SRC CONFIGURE_DEPENDS "../../src/*.h" "../../src/*.cpp" "../../src/aarch64/*.h" "../../src/aarch64/*.cpp")
message(STATUS "Source files:")
foreach (_s ${SRC})
    get_filename_component(_s "${_s}" ABSOLUTE)
    message(STATUS "${_s}")
endforeach()

add_library(prtracer-objects OBJECT ${SRC})
# shared libraries need PIC
set_property(TARGET prtracer-objects PROPERTY POSITION_INDEPENDENT_CODE 1)

add_executable(ptracer $<TARGET_OBJECTS:prtracer-objects>)
# Build shared library
add_library(ptracer-shared SHARED $<TARGET_OBJECTS:prtracer-objects>)
set_target_properties(ptracer-shared PROPERTIES VERSION ${PROJECT_VERSION}
                                                PUBLIC_HEADER ../../src/TracingManager.h)
install(TARGETS ptracer-shared
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
# Build static library
add_library(ptracer-static STATIC $<TARGET_OBJECTS:prtracer-objects>)
set_target_properties(ptracer-static PROPERTIES VERSION ${PROJECT_VERSION}
                                                PUBLIC_HEADER ../../src/TracingManager.h)
install(TARGETS ptracer-static
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

target_link_libraries(ptracer PRIVATE Boost::program_options Boost::thread unwindstack lzma)

include_directories(#${CMAKE_SYSROOT}/usr/include/c++/v1/
                    #${CMAKE_SYSROOT}/usr/include/aarch64-linux-android/
                    ${Boost_INCLUDES}
                    ${libunwindstack-ndk_SOURCE_DIR}/include)

set(EXTRA_FLAGS "-c -Werror -Wall -Wextra -MMD -Wall -Wextra -Wconversion -Wsign-conversion")
set(EXTRA_FLAGS "-fexceptions -frtti -fstack-protector-all -Wstack-protector -ftrapv -Wno-unused-but-set-variable -Wformat -Wformat-security -D_FORTIFY_SOURCE=2 -U_FORTIFY_SOURCE -fvisibility=hidden -fvisibility-inlines-hidden")
target_compile_options(ptracer PRIVATE ${CMAKE_C_FLAGS} ${EXTRA_FLAGS})
target_compile_options(ptracer-static PRIVATE ${CMAKE_C_FLAGS} ${EXTRA_FLAGS})
target_compile_options(ptracer-shared PRIVATE ${CMAKE_C_FLAGS} ${EXTRA_FLAGS})
# Needed for the usage of the correct data structures to extract process information via ptrace
add_compile_definitions(ARCH_AARCH64)

#get_cmake_property(_variableNames VARIABLES)
#list (SORT _variableNames)
#foreach (_variableName ${_variableNames})
#    message(STATUS "${_variableName}=${${_variableName}}")
#endforeach()